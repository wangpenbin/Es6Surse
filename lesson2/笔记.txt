变量:

  var
    1.可以重复声明
    2.无法限制修改
    3.没有块级作用域

    let        不能重复声明  变量-可以修改   块级作用域
    const      不能重复声明  常量-不能修改  块级作用域



  为什么要出ES6?
    刷存在感,也不一定
    实际上来说,任何东西都有它的一个缺陷,有不足,可能你前几年看起来你可能觉得非常棒,
    全世界最好的就是他了,但是过几年,你会发现者论性能不如c语言,论工程性不如java,论搞怪还不如
    Python,反正怎么看都感觉不行,说白了,实际上来说语言是有个迭代的过程,他总有一些自己的问题,
    那咱们就来先说说看javascript里面的原本的这个var变量,看看他有没有什么问题,或者说他的问题出在哪了,

    实际上来说,我非常明白的说一句话,并不是因为我是教javascript的,所以我就说javascript有多好多好,
    javascript
    是世界上最好的语言,如果我这么说,那肯定是坑你呢,javascript这门语言是我接触过的四五门语言里面语法
    最烂的一种,
    这个尤其体现在他的var上,

    比方说他的var有这么几个问题:
      1. 可以重复声明
          什么意思呢,那么我们接下来创建一个html文件给大家演示以下
            <script>
              var a = 12;
              var a = 5;
              alert(a);
            </script>

          打开浏览器,这个时候大家可以看到弹出来了一个5,在这里,浏览器没有报错,也没有在控制台发出警告,什么都没有,
          我不好意思的说,玩其他语言的同志们,比如说,你认识玩java的,你说java哥
             int a = 10;
             int a= 5;
             我这么写靠谱吗?我跟你说,人能喷死你,你信不信,就这破写法,这个变量怎么定义两次,这个在其他语言里面都是不可
             想象的,

         然而事实上来说,var最大的特点就是重复声明,比如说,你第一个接触的语言是js,那么你会觉得其实js还可以,挺好的啊,
         还凑合,勉强能接受,在别的语言里看来简直就是个笑话,这是第一个问题
      2. 无法限制修改
         什么意思呢,那么举个例子:
          程序里面总有那么一些东西其实是永远不变的,它一直是保持一个值,大家如果知识面广点的话就hi到我说的是常量,就
          比方说一个最简单的东西,
            PI,
          我问你, 咱就不说人类的历史了,   就咱有限的这几年前端生涯当中,你觉得PI会发生变化吗,那天变成不是3.1415926了?
          变成4.1几不太可能了吧,这个PI就是一个常量,这辈子都不会变,数学是一个基本东西,肯定是不会变的,就这么多,最多就随着
          计算性能的增强,PI后面一百万位,或者一千万位了,最多是这个,对不对,而在很多语言里面都会有一个常量的概念,但是js
          里面没有,至少他里面的var声明的不是一个常量,那么,换句话说,要不要改,或者说别人能不能不动这个值,全凭自觉,这个
          肯定是不行的,大家都知道一件事,为什么java是全世界最流行的一门语言,没有之一,他是最流行的,原因很简单,因为他非常的
          严谨,非常的死板,你要相信一件事,越是容易的语言,越是简单的语言,号称人生最开心的那种语言,实际上来说,这种语言不严谨
          没法去开发大型的项目,反过来,他会让你觉得很难受,就拿java来说,一开始学的时候是要死要活的,哎哟,我去,这个世界是怎么了,
          这个世界对我不公平.
          然后实际上来说他虽然限制的非常严,你一旦掌握了他之后,开发起大型项目,是非常的心应手的,所以说,没办法,

      3.没有块级作用域
          这个是咱们var声明变量的第三个问题,  当然,如果你本身就是javascript出身的人,那么你会对块级作用域不是非常的了解,'
      还是我刚才那句话,你找个java哥过来问一下,哎,兄弟,这个java里面有个块级作用域有没有用人家告诉你那吃饭的家伙,怎么可能
      不知道,

        当然,先简单的说说什么是块,
        这个 {

        } 就叫做块,也叫语法块,拿花括号给他包起来,

        大家可能常见的会是这种,
          if(){

          }

          for(){

          }
        这些呢,都是语法块,  这个花括号就是块级作用域,

        比如说:我在它里面定义一个变量,出去了就不能访问:
          if(){
            变量 = xxx;
          }

        那么,实际上来说我们都明确的知道一点,在js里面,或者在原本的var声明的变量里面,是没有块级作用域一说的,
        大家可能现在听我说,觉得没有就没有吧,人生最重要的就是开心对吧,其实,你一会等我将完了之后,你就会发信啊块级作用域,
        特别有用,
        现在呢,先给大家写个小例子,我们在创建一个html文件,名称就把他叫做块级作用域
        在这块我们简单的写一个小程序:
        <script>
           if(true){
             var a = 20;
           }

           alert(a);
        </script>

        我们会发现这个变量a他出了块级作用域之后,依旧用的杠杠滴,这个挺让人头疼的,

        那么,接下来我也懒得墨迹了,我们直接来说正事,

        实际上在es6当中有了两种新的定义变量的方式,
        一个是  let
        一个是 const

        直接说了啊,首先let和const共同的特点,
          let        不能重复声明  变量-可以修改   块级作用域
          const      不能重复声明  常量-不能修改  块级作用域
          这个在咱javascript里面你可能会觉得还好,因为你第一天见的就是这个,
          但这个如果在别的语言里,简直就是个笑话,变量不能重复声明就应该是这样,

          接下来,给大家玩个小东西,创建一个html文件,名称为不能重复声明,

          打开浏览器之后,你可以明确的发现,直接崩了,什么都没有,
          我们打开控制台,看看浏览器有没有告诉我们什么,打开之后,我们可以看到,
          浏览器这兄弟直接给我们报了一个错,说你的这个a已经被定义过了,你不要
          在定义了,

          这个其实非常有用,限制越松的语言,你可能一开始会觉得好爽,人生最重要的就是开心,但是你会发现用着用着就越来
          越难受了,为什么呢/.比如说重复声明这件事,要如果在大型的项目里面,人多嘴杂,指不定你定义了一个什么东西,别人
          也定义了一个和你一样的东西,这个时候就会发生冲突了,而且还不报错,这个时候就很难受了,

          而用let就不会发生这样的事情了,不会重复声明,我用在我自己身上发生的一件事来说,在我写复杂程序的时候,
          实际上我用let已经帮过我好几回了, 浏览器他会直接告诉我报了一个错, 那个变量和参数名是一样的, 这要是
          用var的话,那就比较尴尬了,你都不好找,也不知道哪里出了问题,

          这个时候有的同学就说了,老师,那个var加了严格模式也可以做到呀,那么这块就属于另一个话题,在这块我们先不讨论,
          因为严格模式不是es6的一部分,


          在这里,我们的const也是这样的,他也不可以重复声明,
          我们可以写了例子来测试以下,文件名称叫做不能重复声明2

          <script>

            const a = 10;

            const a = 5;

            alert(a);

          </script>

          我们打开浏览器之后发现报错了,说明我们的这个const的确是不能重复声明


          好,挺好,这块呢,我们现在解决了var第一个重复声明的问题
          那么第二个问题咱说过,限制越少其实反而越麻烦,
          亲爱的let 他的作用就是为了声明变量 - 可以不断的进行修改
          而const 声明的就是常量,常量-是不能修改的 ,这个呢,是好事,

          那么接下来我们来玩玩:
             我们在创建一个html文件,名称位 变量和常量.html

             <script>
                let a = 10;
                a = 5;
                alert(a);
             </script>

             我们会发现可以重新赋值

             而反过来用const的话,我们会发现,浏览器这兄弟给我们提示错误了,说白了就是不能对常量进行赋值,


        接下来我们在看看第三个问题:
              块级作用域问题, 而let  和 const   就能解决我们用var时无视块级作用域的问题

              当然,反过来说一下,我们的语法块不一定非得时if , 他也可以独立存在, {} 他也是一个语法块,
              那么效果也时一样的

              说到这个时候,有的同学就提出来疑问了,老师,这个重复声明问题我能理解,变量,常量修改问题我也能理解,'
              但是这个块级作用域我实在看不出他有什么用,

              那么接下来我在用例子,保证把大家搞得明明白白,服服帖帖

              任何一对花括号（｛和｝）中的语句集都属于一个块，在这之中定义的所有变量在代码块外都是不可见的，我们称之为块级作用域。
